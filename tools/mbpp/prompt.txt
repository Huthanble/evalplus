Please add contracts to the Python function generated by llm according to the following requirements:

1. The text to be processed is separated by "---"
2. Both ends of the text are Python code blocks, including three parts:
2.1 The task description of generating the code, commented with ' """ '
2.2 Python function generated by llm model
2.3 Test input code, including about 3 lines of assert statements, used to test 
    whether the output of the generated Python function meets expectations
3. The contract you need to add is to verify whether the input arguments are valid, 
   Specifically, you need to verify whether the input parameter types are in line with the 
   requirements of the problem(int/float/both). If the parameter is a composite type, you also need to verify 
   the types of its sub-elements. If the parameter has a length, you need to verify whether 
   the length is in line with the requirements of the problem, as well as the size relationship 
   between the lengths of the two parameters, if applicable. You can add other necessary conditions 
   according to the requirements of the problem.
   The format of the contract should conform to the following requirements: 
   'assert condition, "invalid inputs" # $_CONTRACT_$'
   The conditions include [
    'isinstance(num, int)', 'all(isinstance(item, (int, float, complex, str))) for item in arraynums)', 'len(list) > 0', 'len(list1) == len(list2)',
    's.isdigit()'
   ]
   The contract code appears at the beginning of the function just like normal code
   IMPORTANT: You are not allowed to add any other code or comments other than the contract code!
4. Please give me the modified code block and output it in the markdown code block format. 
   No other content is allowed in your answer.